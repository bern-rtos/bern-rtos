[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "probe-run --chip STM32f411RETx"

rustflags = [
  # This is needed if your flash or ram addresses are not aligned to 0x10000 in memory.x
  # See https://github.com/rust-embedded/cortex-m-quickstart/pull/95
  "-C", "link-arg=--nmagic",

  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=-Tdefmt.x",
  "-C", "link-arg=-Tbern.x",


  "-C", "inline-threshold=275", # use with opt "s"

  "-C", "link-arg=-Map=output.map",
  "-C", "link-arg=--demangle",
]

[build]
# Pick ONE of these compilation targets
# target = "thumbv6m-none-eabi"    # Cortex-M0 and Cortex-M0+
# target = "thumbv7m-none-eabi"    # Cortex-M3
# target = "thumbv7em-none-eabi"   # Cortex-M4 and Cortex-M7 (no FPU)
target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)


[alias]
xtask = "run --manifest-path xtask/Cargo.toml --target=x86_64-unknown-linux-gnu --"